
currently:

    - server doesn't time out
    - server holds strong-pointer on read-loop

    - client does time out
    - client holds strong-pointer on read-loop


* no need to guard io_service

* reads don't need to be strong
    - server : why read responses if nobody's listening?
    - client : throw away client to close connection

* writes don't need to be strong
    - server : writer holds strong ptr from server_pool
    - client : strong ptr held by rstate

* client & server should update with last read timestamp
    - server_pool will periodically check servers for timeouts
    - listener will periodically check clients for timeouts

* client/server destructor should move socket into lambda for
    dispatched destruction in it's own io_loop

